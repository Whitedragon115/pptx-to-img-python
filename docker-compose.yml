version: '3.8'

services:
  pptx-converter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pptx-converter-api
    ports:
      - "5012:5000"
    volumes:
      # 掛載臨時檔案目錄到主機 (可選，用於持久化)
      - ./docker-temp:/app/temp
      # 掛載日誌目錄
      - ./docker-logs:/app/logs
      # 掛載配置檔案 (如果需要自定義配置)
      - ./docker-config:/app/config:ro
    environment:
      # Flask 配置
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      
      # API 服務器配置
      - HOST=0.0.0.0
      - PORT=5000
      - DEBUG=false
      
      # 檔案管理配置
      - TEMP_FOLDER=/app/temp
      - UPLOAD_FOLDER=/app/uploads
      - MAX_STORAGE_GB=10
      - CLEANUP_INTERVAL_MINUTES=20
      - MAX_FILE_SIZE_MB=100
      
      # 轉換配置
      - DEFAULT_DPI=300
      - IMAGE_FORMAT=png
      - LIBREOFFICE_TIMEOUT=60
      
      # CORS 配置
      - CORS_ORIGINS=*
      
      # 系統配置
      - DISPLAY=:99
      - PYTHONUNBUFFERED=1
      
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # 資源限制
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # 日誌配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 可選：添加 Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: pptx-converter-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./test_frontend_v2.html:/usr/share/nginx/html/index.html:ro
    depends_on:
      - pptx-converter
    restart: unless-stopped
    profiles:
      - "with-nginx"

volumes:
  # 建立命名卷用於持久化數據
  temp-data:
  logs-data:
